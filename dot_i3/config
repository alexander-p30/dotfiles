# i3 config file (v4)
# Please see http://i3wm.org/docs/userguideshtml for a complete reference!
# vim:fileencoding=utf-8:ft=i3config:foldmethod=marker

# Retrieving env vars
set_from_resource $main_screen i3.main_screen
set_from_resource $secondary_screen i3.secondary_screen

# Set mod key (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod4

# Font for window titles
font xft:URWGothic-Book 11

# Borders {{{
# Configure border style <normal|1pixel|pixel xx|none|pixel>
default_border pixel 2
default_floating_border normal

# Hide borders
hide_edge_borders none
# }}}

# Sound {{{

exec --no-startup-id start-pulseaudio-x11
bindsym $mod+Ctrl+m exec pavucontrol -t 3

# Volume controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle

# }}}

# Brightness {{{

bindsym XF86MonBrightnessUp exec "xbacklight -inc 5; notify-send 'brightness up'"
bindsym XF86MonBrightnessDown exec "xbacklight -dec 5; notify-send 'brightness down'"

# }}}

# Application Start Binds {{{

bindsym $mod+Ctrl+b exec blueman-manager
bindsym $mod+F2 exec firefox
bindsym $mod+F3 exec pcmanfm
bindsym $mod+Shift+d --release exec "killall dunst; exec notify-send 'restart dunst'"
bindsym Print exec flameshot gui
bindsym $mod+Ctrl+x --release exec --no-startup-id xkill

# rofi
bindsym $mod+d exec --no-startup-id rofi -show drun
bindsym $mod+w exec --no-startup-id rofi -show window

# Terminal
bindsym $mod+Return exec kitty
bindsym $mod+Shift+Return exec --no-startup-id "notify-send -u low 'Boxy launched!'; kitty --class floating --title boxy"

for_window [title="boxy"] resize set 900 px 600 px
for_window [title="boxy"] move scratchpad

# Reset keyboard config
bindsym $mod+Ctrl+k exec "$HOME/.scripts/keebs.sh"

# Polybar
bindsym $mod+Ctrl+h exec polybar-msg cmd toggle
bindsym $mod+Shift+p exec "$HOME/.config/polybar/launch.sh && nitrogen --restore && exec notify-send 'Polybar and nitrogen restarted'"

# dunst
bindsym Mod1+space exec dunstctl close

# }}}

# i3 Binds {{{

# reload the configuration file
bindsym $mod+Shift+c reload; exec notify-send "i3 config reloaded"

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# }}}

# Windows/Workspaces {{{

# Navigation {{{
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
bindsym $mod+a focus parent

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# workspace back and forth (with/without active container)
bindsym $mod+b workspace back_and_forth
bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth
# }}}

# Layout/Orientation {{{
# split orientation
bindsym $mod+q split toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+e layout toggle split
# }}}

# Window Control {{{
# Use Mouse+$mod to drag floating windows
floating_modifier $mod
#
# kill focused window
bindsym $mod+Shift+q kill

# toggle fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# toggle sticky
bindsym $mod+Shift+s sticky toggle

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8

# }}}

# Scratchpad {{{

# move the currently focused window to the scratchpad
bindsym $mod+Shift+t move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+t [title="^(?!Zettelkasten Machine).*$"] scratchpad show

# }}}

# Note taking {{{
bindsym $mod+n [title="Zettelkasten Machine"] scratchpad show
bindsym $mod+Shift+n exec "notify-send -u low 'Zettelkasten Machine up and running!'; emacs -T 'Zettelkasten Machine' ~/Dropbox/org/zk/20220516215911-personal_diary.org"
bindsym $mod+Shift+w exec "notify-send -u low 'Zettelkasten Machine up and running!'; emacs -T 'Zettelkasten Machine' ~/Dropbox/org/zk/20220516215640-work_diary.org"

for_window [title="Zettelkasten Machine"] floating enable
for_window [title="Zettelkasten Machine"] resize set 1280 px 800 px
for_window [title="Zettelkasten Machine"] move scratchpad
for_window [title="Zettelkasten Machine"] mark org_mode
# }}}

# Workspaces {{{
set $ws1 1:
set $ws2 2:
set $ws3 3:
set $ws4 4:
set $ws5 5:
set $ws6 6:
set $ws7 7:
set $ws8 8:

workspace "$ws1" output $main_screen
workspace "$ws2" output $main_screen
workspace "$ws3" output $main_screen
workspace "$ws4" output $main_screen
workspace "$ws5" output $main_screen
workspace "$ws6" output $main_screen
workspace "$ws7" output $main_screen

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8

#navigate workspaces next / previous
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# move workspace between displays
bindsym $mod+Mod1+h move workspace to output left
bindsym $mod+Mod1+l move workspace to output right
# }}}

# Applications {{{
# Open applications on specific workspaces
assign [class="firefox"] $ws2
assign [class="Brave-browser"] $ws2
assign [class="Google-chrome"] $ws3
for_window [class="Spotify"] move to workspace $ws4

# Open specific applications in floating mode
for_window [class="floating"] floating enabled
for_window [class="flameshot"] floating enabled
for_window [class="Steam" title="Friends List"] floating enable
for_window [class="Steam" title="Friends List"] resize set 800 px 400 px
for_window [class="SpeedCrunch"] floating enable
for_window [class="SpeedCrunch"] resize set 900 px 900 px
for_window [class="Yad" title="yad-calendar"] floating enable
for_window [title="alsamixer"] floating enable border pixel 1
for_window [class="Blueman-manager"] floating enable
for_window [class="GParted"] floating enable border normal
for_window [class="Lightdm-settings"] floating enable
for_window [class="Lxappearance"] floating enable sticky enable border normal
for_window [class="Nitrogen"] floating enable sticky enable border normal
for_window [class="Pamac-manager"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [class="qt5ct"] floating enable sticky enable border normal
for_window [class="Qtconfig-qt4"] floating enable sticky enable border normal
for_window [class="(?i)System-config-printer.py"] floating enable border normal
for_window [class="Timeset-gui"] floating enable border normal
for_window [class="(?i)virtualbox"] floating enable border normal

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus
# }}}

# }}}

# Modes {{{
# Set shut down, restart and locking features
bindsym $mod+0 mode "$mode_system"
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id betterlockscreen -l blur, mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"
mode "resize" {
        # Increase/decrease by 5
        bindsym h resize shrink width 5 px or 5 ppt
        bindsym k resize grow height 5 px or 5 ppt
        bindsym j resize shrink height 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt

        # Increase/decrease by 15
        bindsym Shift+h resize shrink width 15 px or 15 ppt
        bindsym Shift+k resize grow height 15 px or 15 ppt
        bindsym Shift+j resize shrink height 15 px or 15 ppt
        bindsym Shift+l resize grow width 15 px or 15 ppt

        # Increase/decrease by 2
        bindsym Ctrl+h resize shrink width 2 px or 2 ppt
        bindsym Ctrl+k resize grow height 2 px or 2 ppt
        bindsym Ctrl+j resize shrink height 2 px or 2 ppt
        bindsym Ctrl+l resize grow width 2 px or 2 ppt

        # exit resize mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
# }}}

# Autostart applications and scripts {{{

exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id nm-applet
exec --no-startup-id xfce4-power-manager
exec --no-startup-id xautolock -time 15 -locker "betterlockscreen -l blur" -notify 30 -notifier "notify-send 'Screen will lock in 30s'" -corners --++
exec --no-startup-id $HOME/.scripts/keebs.sh
exec --no-startup-id dropbox
exec --no-startup-id compton -b -f
exec_always --no-startup-id ff-theme-util
exec_always --no-startup-id fix_xcursor
exec_always --no-startup-id sleep 0.2; $HOME/.config/autorandr/startup.sh
exec_always --no-startup-id sleep 1; $HOME/.config/polybar/launch.sh

# }}}

# Theming {{{
# Gruvbox colors
set $bg #282C34
set $red #E06C75
set $green #98C379
set $yellow #E5C07B
set $orange #BE5046
set $blue #61AFEF
set $purple #C678DD
set $aqua #56B6C2
set $gray #5C6370
set $darkgray #1d2021
set $white #ABB2BF

# Theme colors
# Default
# class                   border  backgr. text    indic.   child_border
client.focused          $purple $purple $darkgray $darkgray
client.focused_inactive $darkgray $darkgray $yellow $gray
client.unfocused        $darkgray $darkgray $yellow $gray
client.urgent           $red $red $aqua $blue
client.placeholder      #000000 #0c0c0c #ffffff #000000

client.background       $bg
# }}}

# i3 Gaps {{{

# Set inner/outer gaps
gaps inner 10
gaps outer -2

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
# smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# Modes {{{

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# }}}

# }}}
