(defcfg
  ;; For Linux
  input  (device-file "/dev/input/by-path/platform-i8042-serio-0-event-kbd")
  output (uinput-sink "lenovo-kmonad-output")

  ;; This option tells KMonad to let non-configured keys act normal
  fallthrough true
)

(defsrc
  esc                         del
  ` 1 2 3 4 5 6 7 8 9 0 - = bspc
    q w e r t y u i o p [ ] \
  caps  a s d f g h j k l  ; '
    z x c v b n m , . / 
      lalt spc ralt
)

(defalias
  esc-or-ctrl-hmrw (tap-next esc (layer-toggle hmrw-utils))
)

(defalias
  altgr-or-number-hmrw (tap-next ralt (layer-toggle hmrw-numbers))
)

(defalias
  lalt-or-symbol-hmrw (tap-next lalt (layer-toggle hmrw-symbols))
)

(defalias
    met_a (tap-hold-next-release 120 a lmet)
    alt_s (tap-hold-next-release 120 s lalt)
    ctl_d (tap-hold-next-release 120 d lctl)
    sft_f (tap-hold-next-release 120 f lsft)

    sft_j (tap-hold-next-release 120 j rsft)
    ctl_k (tap-hold-next-release 120 k rctl)
    alt_l (tap-hold-next-release 120 l lalt)
    met_; (tap-hold-next-release 120 ; rmet)

    hmrw_a (tap-hold-next-release 120 C-a lmet)
    hmrw_s (tap-hold-next-release 120 C-s lalt)
    hmrw_d (tap-hold-next-release 120 C-d lctl)
    hmrw_f (tap-hold-next-release 120 C-f lsft)

    hmrw_j (tap-hold-next-release 120 down rsft)
    hmrw_k (tap-hold-next-release 120 up rctl)
    hmrw_l (tap-hold-next-release 120 right lalt)
    hmrw_; (tap-hold-next-release 120 home rmet)

    num_a (tap-hold-next-release 120 1 lmet)
    num_s (tap-hold-next-release 120 2 lalt)
    num_d (tap-hold-next-release 120 3 lctl)
    num_f (tap-hold-next-release 120 4 lsft)

    num_j (tap-hold-next-release 120 7 rsft)
    num_k (tap-hold-next-release 120 8 rctl)
    num_l (tap-hold-next-release 120 9 lalt)
    num_; (tap-hold-next-release 120 0 rmet)

    sym_a (tap-hold-next-release 120 ` lmet)
    sym_s (tap-hold-next-release 120 - lalt)
    sym_d (tap-hold-next-release 120 = lctl)
    sym_f (tap-hold-next-release 120 \ lsft)

    sym_j (tap-hold-next-release 120 [ rsft)
    sym_k (tap-hold-next-release 120 ] rctl)
    sym_l (tap-hold-next-release 120 \( lalt)
    sym_; (tap-hold-next-release 120 \) rmet)
)

(deflayer qwerty
  caps                            del
  ` 1 2 3 4 5 6 7 8 9 0 - = bspc
    q w e r t y u i o p [ ] \
  @esc-or-ctrl-hmrw @met_a   @alt_s   @ctl_d   @sft_f   g   h   @sft_j   @ctl_k   @alt_l   @met_; '
    z x c v b n m , . /
   @lalt-or-symbol-hmrw spc @altgr-or-number-hmrw
)

(deflayer hmrw-utils
  caps                          C-del
  C-` C-1 C-2 C-3 C-4 C-5 C-6 C-7 C-8 C-9 C-0 C-- C-= C-bspc
    C-q C-w C-e C-r C-t C-y C-u C-i C-o C-p pgup pgdn C-\
  @esc-or-ctrl-hmrw  @hmrw_a @hmrw_s @hmrw_d @hmrw_f C-g left @hmrw_j @hmrw_k @hmrw_l @hmrw_; end
    C-z C-x C-c C-v C-b C-n C-m C-, C-. C-/
        @lalt-or-symbol-hmrw C-spc @altgr-or-number-hmrw
)

(deflayer hmrw-numbers
  caps                            del
  RA-` RA-1 RA-2 RA-3 RA-4 RA-5 RA-6 RA-7 RA-8 RA-9 RA-0 RA-- RA-= RA-bspc
    ! @ # $ % ^ & * \( \) RA-[ RA-] RA-\
  @esc-or-ctrl-hmrw @num_a @num_s @num_d @num_f 5 6 @num_j @num_k @num_l @num_; RA-\
    RA-z RA-x RA-c RA-v RA-b RA-n RA-m RA-, RA-. RA-/
    @lalt-or-symbol-hmrw spc @altgr-or-number-hmrw
)

(deflayer hmrw-symbols
  caps                            del
  RA-` RA-1 RA-2 RA-3 RA-4 RA-5 RA-6 RA-7 RA-8 RA-9 RA-0 RA-- RA-= RA-bspc
    ~ \_ + | % ^ \( \) \( \) RA-[ RA-] RA-\
    @esc-or-ctrl-hmrw @sym_a @sym_s @sym_d @sym_f RA-g RA-h @sym_j @sym_k @sym_l @sym_; RA-\
    RA-z RA-x RA-c RA-v RA-b RA-n RA-m RA-, RA-. RA-/
    @lalt-or-symbol-hmrw spc @altgr-or-number-hmrw
)
